CREATE DATABASE FARMACORDOBA
GO

USE FARMACORDOBA
GO

-- TABLAS DE UBICACION //////////////////////////////////////////////////////////

CREATE TABLE PAISES
(
ID_PAIS INT,
PAIS VARCHAR(50)

CONSTRAINT PK_PAIS PRIMARY KEY (ID_PAIS)
);

CREATE TABLE PROVINCIAS
(
ID_PROVINCIA INT,
PROVINCIA VARCHAR(50),
ID_PAIS INT

CONSTRAINT PK_PROVINCIAS PRIMARY KEY (ID_PROVINCIA)

CONSTRAINT FK_PROVINCIAS_PAISES FOREIGN KEY (ID_PAIS)
REFERENCES PAISES (ID_PAIS)
);

CREATE TABLE BARRIOS
(
ID_BARRIO INT,
BARRIO VARCHAR(50),
ID_PROVINCIA INT

CONSTRAINT PK_BARRIOS PRIMARY KEY (ID_BARRIO)

CONSTRAINT FK_BARRIOS_PROVINCIAS FOREIGN KEY (ID_PROVINCIA)
REFERENCES PROVINCIAS (ID_PROVINCIA)
);

--TABLAS AUXILIARES +++++++++++++++++++++++++++++++++++++++++++++++++

CREATE TABLE CONTACTOS
(
ID_CONTACTO INT,
EMAIL VARCHAR(50),
TELEFONO BIGINT,
FACEBOOK VARCHAR(50),
INSTAGRAM VARCHAR(50)

CONSTRAINT PK_CONTACTOS PRIMARY KEY (ID_CONTACTO)
);

CREATE TABLE RAZON_SOCIAL
(
ID_RAZON INT,
DESCRIPCION VARCHAR(50),

CONSTRAINT PK_RAZON_SOCIAL PRIMARY KEY (ID_RAZON)
);


CREATE TABLE PROVEEDORES
(
ID_PROVEEDOR INT,
NOMBRE VARCHAR(50),
ID_RAZON INT,
ID_CONTACTO INT,
CALLE VARCHAR(50),
CUIT BIGINT,
ID_BARRIO INT

CONSTRAINT PK_PROVEDORES PRIMARY KEY (ID_PROVEEDOR)

CONSTRAINT FK_PROVEDORES_BARRIOS FOREIGN KEY (ID_BARRIO)
REFERENCES BARRIOS (ID_BARRIO),

CONSTRAINT FK_PROVEEDORES_RAZON_SOCIAL FOREIGN KEY (ID_RAZON)
REFERENCES RAZON_SOCIAL (ID_RAZON),

CONSTRAINT FK_PROVEEDORES_CONTACTOS FOREIGN KEY (ID_CONTACTO)
REFERENCES CONTACTOS (ID_CONTACTO)
);

--PERSONAS : TABLAS DE EMPLEADOS Y CLIENTES /////////////////////////////////////

CREATE TABLE PUESTOS
(
ID_PUESTO INT,
PUESTO VARCHAR(50)

CONSTRAINT PK_PUESTOS PRIMARY KEY (ID_PUESTO)
);

CREATE TABLE OBRA_SOCIAL
(
ID_OBRASOCIAL INT,
NOMBRE VARCHAR(50)

CONSTRAINT PK_OBRASOCIAL PRIMARY KEY (ID_OBRASOCIAL)
);

--TABLA SEDES ///////////////////////////////////////////////////////

CREATE TABLE SEDES
(
ID_SEDE INT,
NOMBRE VARCHAR(50),
CALLE VARCHAR(50),
ID_BARRIO INT,
ID_CONTACTO INT

CONSTRAINT PK_SEDES PRIMARY KEY (ID_SEDE)

CONSTRAINT FK_SEDES_BARRIOS FOREIGN KEY (ID_BARRIO)
REFERENCES BARRIOS (ID_BARRIO),

CONSTRAINT FK_SEDES_CONTACTOS FOREIGN KEY (ID_CONTACTO)
REFERENCES CONTACTOS (ID_CONTACTO)
);

-- EMPLEADOS ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

CREATE TABLE EMPLEADOS
(
LEGAJO INT,
NOMBRE VARCHAR(50),
APELLIDO VARCHAR(50),
ID_PUESTO INT,
ID_SEDE INT,
ID_CONTACTO INT,
SUELDO DECIMAL (10,2),
FECHA_INGRESO DATE,
ACTIVO BIT

CONSTRAINT PK_EMPLEADOS PRIMARY KEY (LEGAJO)

CONSTRAINT FK_EMPLEADOS_PUESTOS FOREIGN KEY (ID_PUESTO)
REFERENCES PUESTOS (ID_PUESTO),

CONSTRAINT FK_EMPLEADOS_SEDES FOREIGN KEY (ID_SEDE)
REFERENCES SEDES (ID_SEDE),

CONSTRAINT FK_EMPLEADOS_CONTACTOS FOREIGN KEY (ID_CONTACTO)
REFERENCES CONTACTOS (ID_CONTACTO)
);

CREATE TABLE CLIENTES
(
ID_CLIENTE INT,
NOMBRE VARCHAR(50),
APELLIDO VARCHAR(50),
ID_OBRASOCIAL INT,
ID_BARRIO INT,
DNI BIGINT,
ID_CONTACTO INT,
SEXO BIT

CONSTRAINT PK_CLIENTES PRIMARY KEY (ID_CLIENTE)

CONSTRAINT FK_CLIENTES_BARRIOS FOREIGN KEY (ID_BARRIO)
REFERENCES BARRIOS (ID_BARRIO),

CONSTRAINT FK_CLIENTES_OBRASOCIAL FOREIGN KEY (ID_OBRASOCIAL)
REFERENCES OBRA_SOCIAL (ID_OBRASOCIAL),

CONSTRAINT FK_CLIENTES_CONTACTOS FOREIGN KEY (ID_CONTACTO)
REFERENCES CONTACTOS (ID_CONTACTO)
);

CREATE TABLE MEDICOS
(
ID_MEDICO INT,
NOMBRE VARCHAR(50),
APELLIDO VARCHAR(50),
ID_OBRASOCIAL INT,
ID_SEDE INT,
ID_CONTACTO INT,
MATRICULA BIGINT,
FECHA_INGRESO DATE

CONSTRAINT PK_MEDICOS PRIMARY KEY (ID_MEDICO)

CONSTRAINT FK_MEDICOS_OBRA_SOCIAL FOREIGN KEY (ID_OBRASOCIAL)
REFERENCES OBRA_SOCIAL (ID_OBRASOCIAL),

CONSTRAINT FK_MEDICOS_SEDE FOREIGN KEY (ID_SEDE)
REFERENCES SEDES (ID_SEDE),

CONSTRAINT FK_MEDICOS_CONTACTOS FOREIGN KEY (ID_CONTACTO)
REFERENCES CONTACTOS (ID_CONTACTO)
);

CREATE TABLE SERVICIOS
(
ID_SERVICIO INT,
SERVICIO VARCHAR(50)

CONSTRAINT PK_SERVICIOS PRIMARY KEY (ID_SERVICIO)
);

-- PRODUCTOS FACTURABLES Y SUS TABLAS  /////////////////////////////////////////////

CREATE TABLE TIPOS_PRODUCTOS
(
ID_T_PRODUCTO INT,
TIPO VARCHAR(50)

CONSTRAINT PK_TIPOS_PRODUCTO PRIMARY KEY (ID_T_PRODUCTO)
);

CREATE TABLE MARCAS
(
ID_MARCA INT,
MARCA VARCHAR(50)

CONSTRAINT PK_MARCAS PRIMARY KEY (ID_MARCA)
);

CREATE TABLE PRODUCTOS
(
ID_PRODUCTO INT,
NOMBRE VARCHAR(50),
DESCRIPCION VARCHAR(100),
ID_T_PRODUCTO INT,
ID_MARCA INT,
ID_PROVEEDOR INT,
ID_PAIS INT,
STOCK INT,
PRECIO DECIMAL(10,2)

CONSTRAINT PK_PRODUCTOS PRIMARY KEY (ID_PRODUCTO)

CONSTRAINT FK_PRODUCTOS_TIPOS_PRODUCTOS FOREIGN KEY (ID_T_PRODUCTO)
REFERENCES TIPOS_PRODUCTOS (ID_T_PRODUCTO),

CONSTRAINT FK_PRODUCTOS_MARCAS FOREIGN KEY (ID_MARCA)
REFERENCES MARCAS (ID_MARCA),

CONSTRAINT FK_PRODUCTOS_PROVEEDORES FOREIGN KEY (ID_PROVEEDOR)
REFERENCES PROVEEDORES (ID_PROVEEDOR),

CONSTRAINT FK_PRODUCTOS_PAISES FOREIGN KEY (ID_PAIS)
REFERENCES PAISES (ID_PAIS)
);

CREATE TABLE TIPOS_CARACTERISTICAS
(
ID_T_CARACTERISTICA INT,
TIPO VARCHAR(50)

CONSTRAINT PK_TIPOS_CARACTERISTICAS PRIMARY KEY (ID_T_CARACTERISTICA)
);

CREATE TABLE CARACTERISTICAS
(
ID_CARACTERISTICA INT,
DETALLES VARCHAR(50),
ID_T_CARACTERISTICA INT,
ID_PRODUCTO INT

CONSTRAINT PK_CARACTERISTICAS PRIMARY KEY (ID_CARACTERISTICA)

CONSTRAINT FK_CARACTERISTICAS_TIPOS_CARACTERISTICAS FOREIGN KEY (ID_T_CARACTERISTICA)
REFERENCES TIPOS_CARACTERISTICAS (ID_T_CARACTERISTICA),

CONSTRAINT FK_CARACTERISTICAS_PRODUCTOS FOREIGN KEY (ID_PRODUCTO)
REFERENCES PRODUCTOS (ID_PRODUCTO)
);

--FACTURACION /////////////////////////////////////////////////////////////

CREATE TABLE FORMA_PAGO
(
ID_PAGO INT,
PAGO VARCHAR(50)

CONSTRAINT PK_FORMA_PAGO PRIMARY KEY (ID_PAGO)
);

CREATE TABLE FORMA_ENVIO
(
ID_ENVIO INT,
ENVIO VARCHAR(50)

CONSTRAINT PK_FORMA_ENVIO PRIMARY KEY (ID_ENVIO)
);

CREATE TABLE FACTURAS
(
NRO_FACTURA INT,
FECHA DATE,
LEGAJO INT, --ID DEL EMPLEADO
ID_CLIENTE INT,
ID_PAGO INT,
ID_SEDE INT,
ID_ENVIO INT

CONSTRAINT PK_FACTURAS PRIMARY KEY (NRO_FACTURA)

CONSTRAINT FK_FACTURAS_EMPLEADOS FOREIGN KEY (LEGAJO)
REFERENCES EMPLEADOS (LEGAJO),

CONSTRAINT FK_FACTURAS_CLIENTES FOREIGN KEY (ID_CLIENTE)
REFERENCES CLIENTES (ID_CLIENTE),

CONSTRAINT FK_FACTURAS_FORMA_PAGO FOREIGN KEY (ID_PAGO)
REFERENCES FORMA_PAGO (ID_PAGO),

CONSTRAINT FK_FACTURAS_SEDES FOREIGN KEY (ID_SEDE)
REFERENCES SEDES (ID_SEDE),

CONSTRAINT FK_FACTURA_FORMA_ENVIO FOREIGN KEY (ID_ENVIO)
REFERENCES FORMA_ENVIO (ID_ENVIO)
);

CREATE TABLE DETALLE_FACTURA
(
ID_DET_FACT INT,
NRO_FACTURA INT,
ID_PRODUCTO INT,
CANTIDAD INT,
PRECIO DECIMAL(10,2)


CONSTRAINT PK_DETALLE_FACTURA PRIMARY KEY (ID_DET_FACT)

CONSTRAINT FK_DETALLE_FACTURA_FACTURAS FOREIGN KEY (NRO_FACTURA)
REFERENCES FACTURAS (NRO_FACTURA),

CONSTRAINT FK_DETALLE_FACTURA_PRODUCTOS FOREIGN KEY (ID_PRODUCTO)
REFERENCES PRODUCTOS (ID_PRODUCTO)
);

-- DETALLE SERVICIO ////////////////////////////////////////////

CREATE TABLE DETALLE_SERVICIO
(
ID_DET_SERV INT,
NRO_FACTURA INT,
ID_MEDICO INT,
ID_SERVICIO INT,
PRECIO DECIMAL(10,2),
ATENCION INT,
DESCUENTO INT

CONSTRAINT PK_DETALLE_SERVICIO PRIMARY KEY (ID_DET_SERV)

CONSTRAINT FK_DETALLE_SERVICIO_FACTURAS FOREIGN KEY (NRO_FACTURA)
REFERENCES FACTURAS (NRO_FACTURA),

CONSTRAINT FK_DETALLE_SERVICIO_MEDICOS FOREIGN KEY (ID_MEDICO)
REFERENCES MEDICOS (ID_MEDICO),

CONSTRAINT FK_DETALLE_SERVICIO_SERVICIOS FOREIGN KEY (ID_SERVICIO)
REFERENCES SERVICIOS (ID_SERVICIO)
);

-- PEDIDOS ///////////////////////////////////////////////////////////////

CREATE TABLE PEDIDOS
(
ID_PEDIDO INT,
FECHA DATE,
ID_PROVEEDOR INT,
ID_PAGO INT,
ID_ENVIO INT

CONSTRAINT PK_PEDIDOS PRIMARY KEY (ID_PEDIDO)

CONSTRAINT FK_PEDIDOS_PROVEEDORES FOREIGN KEY (ID_PROVEEDOR)
REFERENCES PROVEEDORES (ID_PROVEEDOR),

CONSTRAINT FK_PEDIDOS_FORMA_PAGO FOREIGN KEY (ID_PAGO)
REFERENCES FORMA_PAGO (ID_PAGO),

CONSTRAINT FK_PEDIDOS_FORMA_ENVIO FOREIGN KEY (ID_ENVIO)
REFERENCES FORMA_ENVIO (ID_ENVIO)
);

CREATE TABLE DETALLE_PEDIDO
(
ID_DET_PED INT,
ID_PEDIDO INT,
ID_PRODUCTO INT,
CANTIDAD INT,
PRECIO DECIMAL(10,2)

CONSTRAINT PK_DETALLE_PEDIDO PRIMARY KEY (ID_DET_PED)

CONSTRAINT FK_DETALLE_PEDIDO_PEDIDOS FOREIGN KEY (ID_PEDIDO)
REFERENCES PEDIDOS (ID_PEDIDO),

CONSTRAINT FK_DETALLE_PEDIDO_PRODUCTOS FOREIGN KEY (ID_PRODUCTO)
REFERENCES PRODUCTOS (ID_PRODUCTO)
);